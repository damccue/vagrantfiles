# -*- mode: ruby -*-
# vi: set ft=ruby :

#Prerequisites
# --Plugins--
# vagrant plugin install vagrant-vbguest
# (optional) vagrant plugin install vagrant-rackspace
#
# --Boxes--
# vagrant box add centos6_64 https://opscode-vm.s3.amazonaws.com/vagrant/opscode_centos-6.4_chef-11.4.4.box
# echo -e "{\n    \"provider\": \"rackspace\"\n}\n" > metadata.json; tar czvf rackspace.box ./metadata.json 
# vagrant box add centos6_64 rackspace.box 

#Global Variables
CHEF_SERVER_PROTOCOL="https"
CHEF_SERVER_IP="192.168.50.2"
CHEF_SERVER_PORT="4000"
# Access chef server by browsing to https://192.168.50.2:4000

# Setup chef server download cache
host_cache_path = File.expand_path("../../.cache", __FILE__)
guest_cache_path = "/var/chef/cache"
FileUtils.mkdir(host_cache_path) unless File.exist?(host_cache_path)

Vagrant.configure('2') do |config|

	config.vm.box = 'centos6_64'
	config.ssh.forward_agent = true	
	config.vm.synced_folder host_cache_path, guest_cache_path # Allow /var/chef/cache caching
	config.vm.synced_folder ".", "/vagrant", :disabled => true

	# --Providers--
	# Virtualbox and Rackspace
	
	config.vm.provider :virtualbox do |vb|
		vb.vbguest.auto_update = true
		vb.customize [
			"modifyvm", :id,
			"--nictype1", "Am79C973",
			"--ioapic", "on",
			"--rtcuseutc", "on",
			"--cpus", "1",
			"--memory", "1024"
		]
		#vb.gui = true
	end

        config.vm.provider :rackspace do |rs|
                rs.username = ""
                rs.api_key = ""
                rs.flavor = /512MB/
                rs.image = /CentOS 6.4/

        end
	
	# --Provisioners--
	config.vm.provision "shell", inline: "service iptables stop"

	# Chef Server	
	config.vm.define "chefserver" do |chefserver|
		chefserver.vm.host_name = "chefserver"
		
		#Network config
		chefserver.vm.network "private_network", ip: CHEF_SERVER_IP
		
		#Shared folders
		chefserver.vm.synced_folder "../etc-chef-server", "/etc/chef-server" #This is to allow the chef-client to retrieve the chef-server's chef-validator.pem file

		# Install chef server using chef solo		
		chefserver.vm.provision :chef_solo do |chef|
			#chef.log_level = :debug
                        chef.cookbooks_path = "../my-recipes/cookbooks"
			chef.provisioning_path = guest_cache_path # Cache downloaded chef servers in ../.cache
			chef.add_recipe "chef-server"
		
	
			chef.json = { 
				:chef-server => {
					:api_fqdn => "localhost",
					:server_url => "#{CHEF_SERVER_PROTOCOL}://#{CHEF_SERVER_IP}:#{CHEF_SERVER_PORT}",
                                        :webui_enabled => true,
					:configuration => {
						:nginx => {
							:ssl_port => CHEF_SERVER_PORT
						}
					}
				}
			}									
		end
	
                # Comment this out on first run until ../etc-chef-server/chef-validator.pem is created
                #chefserver.vm.provision :chef_client do |chef|
                #        chef.chef_server_url = "#{CHEF_SERVER_PROTOCOL}://#{CHEF_SERVER_IP}:#{CHEF_SERVER_PORT}"
                #        chef.validation_key_path = "../etc-chef-server/chef-validator.pem"
                #end
	
	end


	# Chef Client
        config.vm.define "chefclient" do |chefclient|
		chefclient.vm.host_name = "chefclient"

                #Network config
                chefclient.vm.network "private_network", ip: "192.168.50.3"

                # Clear out existing chef keys
                chefclient.vm.provision "shell", inline: 'if [ ! -f /tmp/rekey ]; then touch /tmp/rekey; rm -f /etc/chef/*; echo "REKEY: deleted previous keys"; fi'

                # Comment this out on first run until ../etc-chef-server/chef-validator.pem is created
                chefclient.vm.provision :chef_client do |chef|
                        chef.chef_server_url = "#{CHEF_SERVER_PROTOCOL}://#{CHEF_SERVER_IP}:#{CHEF_SERVER_PORT}"
                        chef.validation_key_path = "../etc-chef-server/chef-validator.pem"
                end

        end
		
	# Post-install
	#chefserver.vm.provision "shell", inline: "yum install telnet -y"
	# Knife setup
	#chefserver.vm.provision "shell", inline: "cp -f /etc/chef-server/admin.pem /etc/chef-server/chef-validator.pem /etc/chef"
	#^^^ Run knife configure -i, use defaults but specify https://192.168.50.2:4000 and use admin password from website
	#chefserver.vm.provision "shell", inline: "chef-server-ctl reconfigure; chef-server-ctl restart"

end
